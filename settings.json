{
    // Prettier settings
    "prettier.singleQuote": true,
    "prettier.trailingComma": "all",
    "prettier.printWidth": 120,
    "prettier.tabWidth": 2,
    "prettier.useTabs": false,
    "prettier.endOfLine": "auto",

    // Git settings
    "git.autofetch": true,
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "git.ignoreMissingGitWarning": true,

    // Editor settings
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.formatOnType": true,
    "editor.tabSize": 2,
    "editor.rulers": [120],
    "editor.insertSpaces": true,
    "editor.trimAutoWhitespace": true,
    "editor.inlineSuggest.enabled": true,
    "editor.fontFamily": "JetBrains Mono, Menlo, Monaco, 'Courier New', monospace",
    "editor.fontSize": 16,
    "editor.fontWeight": "300",
    "editor.lineHeight": 1.5,
    "editor.letterSpacing": 0.5,
    "editor.minimap.enabled": false,
    "editor.hover.delay": 1500,
    "editor.glyphMargin": false,
    "editor.quickSuggestions": {
        "strings": "on"
    },

    // Terminal settings
    "terminal.integrated.fontFamily": "JetBrains Mono, Menlo, Monaco, 'Courier New', monospace",
    "terminal.integrated.fontSize": 16,
    "terminal.integrated.fontWeight": "300",
    "terminal.integrated.letterSpacing": 0.5,

    // Icon settings
    "workbench.iconTheme": "material-icon-theme",
    "workbench.colorTheme": "Visual Studio Dark",
    "workbench.layoutControl.enabled": false,

    // Security settings
    "security.workspace.trust.untrustedFiles": "open",
    "security.workspace.trust.untrustedFolders": "open",

    // Code runner settings
    "code-runner.clearPreviousOutput": true,
    "code-runner.showExecutionMessage": false,
    "code-runner.saveFileBeforeRun": true,

    // Tailwind CSS settings
    "files.associations": {
        "*.css": "tailwindcss"
    },

    // Golang settings
    "gopls": {
        "ui.semanticTokens": true,
        "formatting.gofumpt": true
    },

    // Formatters settings
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "[go]": {
        "editor.defaultFormatter": "golang.go"
    },
    "[go.mod]": {
        "editor.defaultFormatter": "golang.go"
    },
    "[dockerfile]": {
        "editor.defaultFormatter": "ms-azuretools.vscode-docker"
    },

    // Run on save settings
    "emeraldwalk.runonsave": {
        "commands": [
            {
                "match": ".*\\.go$",
                "cmd": "golines ${file} -m 120 -w --ignore-generated --no-reformat-tags"
            }
        ]
    }
}
